
verify_user_password=SELECT count(*) FROM cs_usr WHERE trim(lower(login_name)) = ? AND trim(lower(password)) = ?
fetch_domain_id_from_domain_string=SELECT id FROM cs_domain WHERE name = ?
fetch_config_attr_key_id=SELECT id FROM cs_config_attr_key WHERE key = ?
fetch_config_attr_user_value=SELECT value FROM cs_config_attr_value WHERE id = (SELECT val_id FROM cs_config_attr_jt LEFT JOIN cs_usr ON cs_config_attr_jt.usr_id = cs_usr.id LEFT JOIN cs_ug ON cs_config_attr_jt.ug_id = cs_ug.id LEFT JOIN cs_domain ON cs_config_attr_jt.dom_id = cs_domain.id WHERE cs_usr.login_name LIKE ? AND cs_ug.name LIKE ? AND cs_domain.name LIKE ? AND key_id = ?)
fetch_config_attr_ug_value=SELECT value FROM cs_config_attr_value WHERE id = (SELECT val_id FROM cs_config_attr_jt LEFT JOIN cs_ug ON cs_config_attr_jt.ug_id = cs_ug.id LEFT JOIN cs_domain ON cs_config_attr_jt.dom_id = cs_domain.id WHERE cs_config_attr_jt.usr_id IS NULL AND cs_ug.name LIKE ? AND cs_domain.name LIKE ? AND key_id = ?)
fetch_config_attr_domain_value=SELECT value FROM cs_config_attr_value WHERE id = (SELECT val_id FROM cs_config_attr_jt LEFT JOIN cs_domain ON cs_config_attr_jt.dom_id = cs_domain.id WHERE cs_config_attr_jt.usr_id IS NULL AND cs_config_attr_jt.ug_id IS NULL AND cs_domain.name LIKE ? AND key_id = ?)
fetch_config_attr_exempt_value=SELECT ug_id FROM cs_config_attr_exempt WHERE usr_id = ? AND key_id = ?
fetch_history=SELECT json_data, valid_from FROM cs_history WHERE class_id = ? AND object_id = ? ORDER BY valid_from DESC
insert_history_entry=INSERT INTO cs_history (class_id, object_id, usr_id, ug_id, valid_from, json_data) VALUES (?, ?, ?, ?, ?, ?)
has_history=SELECT count(class_id) FROM cs_history WHERE class_id = ? AND object_id = ?
delete_stringrepcacheentry=delete from cs_stringrepcache where class_id=? and object_id=?
insert_stringrepcacheentry=insert into cs_stringrepcache (class_id,object_id,stringrep) values(?,?,?)
update_stringrepcacheentry=update cs_stringrepcache set stringrep=? where class_id=? and object_id=?


get_all_usergroups=SELECT ug.id id, ug.name name, ug.descr descr, ug.domain domain, ug.prio prio, d.name domain_name FROM cs_ug ug LEFT OUTER JOIN cs_domain d ON ug.domain = d.id ORDER BY ug.name
get_all_class_attributes=SELECT * FROM cs_class_attr
get_all_methods=SELECT * FROM cs_method
get_all_images=SELECT * FROM cs_icon
get_all_users=SELECT id, login_name, password, last_pwd_change, administrator FROM cs_usr
get_all_memberships=SELECT login_name, ug.name ug, 'LOCAL' ugDomain FROM cs_ug_membership m, cs_usr u, cs_ug ug WHERE u.id = m.usr_id AND ug.id = m.ug_id
get_all_class_permissions=SELECT ug.name ug_name, d.name domainname, cp.permission, p.key, cp.class_id, cp.ug_id ug_id FROM cs_ug_class_perm cp, cs_permission p, cs_ug ug, cs_domain d WHERE cp.permission = p.id AND cp.ug_id = ug.id AND ug.domain = d.id
get_all_method_permissions=SELECT DISTINCT m.method_id, plugin_id, u.id ug_id ,d.name ls FROM cs_ug_method_perm p, cs_method m, cs_ug u, cs_domain d WHERE m.id = p.method_id AND u.id = p.ug_id AND u.domain = d.id
fetch_history_limit=SELECT json_data, valid_from FROM cs_history WHERE class_id = ? AND object_id = ? AND rownum <= ? ORDER BY valid_from DESC
table_has_column=SELECT column_name FROM all_tab_cols WHERE lower(table_name) = lower(?) AND lower(column_name) = lower(?)
get_all_classes=SELECT c.id, c.name, descr, class_icon_id, object_icon_id, table_name, primary_key_field, indexed, toStringClass.qualifier toStringQualifier, EditorClass.qualifier EditorQualifier, RendererClass.qualifier RendererQualifier, c.array_link, c.policy, c.attribute_policy FROM cs_class c LEFT OUTER JOIN cs_java_class toStringClass ON (c.tostring = toStringClass.id) LEFT OUTER JOIN cs_java_class EditorClass ON (c.editor = EditorClass.id) LEFT OUTER JOIN cs_java_class RendererClass ON (c.renderer = RendererClass.id)
change_user_password=UPDATE cs_usr SET password = ?, last_pwd_change = current_timestamp WHERE lower(login_name) = ? AND lower(password) = ?
get_attribute_info=SELECT a.*, ts.qualifier toStringString, e.qualifier editor_class, s.qualifier from_string_class, ce.qualifier complexeditorclass FROM cs_attr a LEFT OUTER JOIN cs_java_class e ON (editor = e.id) LEFT OUTER JOIN cs_java_class s ON (from_string = s.id) LEFT OUTER JOIN cs_java_class ce ON (complex_editor = ce.id) LEFT OUTER JOIN cs_java_class ts ON (a.tostring = ts.id) ORDER BY a.class_id, a.pos
supports_scheduled_server_actions=SELECT 't' FROM user_tables WHERE lower(table_name) = 'cs_scheduled_serveractions'