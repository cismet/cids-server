verify_user_password=SELECT count(*) FROM cs_usr WHERE login_name = ? AND md5(salt||?)=pw_hash
fetch_domain_id_from_domain_string=SELECT id FROM cs_domain WHERE name = ?
fetch_config_attr_key_id=SELECT id FROM cs_config_attr_key WHERE key = ?
fetch_config_attr_user_value=SELECT value FROM cs_config_attr_value WHERE id = (SELECT val_id FROM cs_config_attr_jt LEFT JOIN cs_usr ON cs_config_attr_jt.usr_id = cs_usr.id LEFT JOIN cs_ug ON cs_config_attr_jt.ug_id = cs_ug.id LEFT JOIN cs_domain ON cs_config_attr_jt.dom_id = cs_domain.id WHERE cs_usr.login_name LIKE ? AND cs_ug.name LIKE ? AND cs_domain.name LIKE ? AND key_id = ?)
fetch_config_attr_ug_value=SELECT value FROM cs_config_attr_value WHERE id = (SELECT val_id FROM cs_config_attr_jt LEFT JOIN cs_ug ON cs_config_attr_jt.ug_id = cs_ug.id LEFT JOIN cs_domain ON cs_config_attr_jt.dom_id = cs_domain.id WHERE cs_config_attr_jt.usr_id IS NULL AND cs_ug.name LIKE ? AND cs_domain.name LIKE ? AND key_id = ?)
fetch_config_attr_domain_value=SELECT value FROM cs_config_attr_value WHERE id = (SELECT val_id FROM cs_config_attr_jt LEFT JOIN cs_domain ON cs_config_attr_jt.dom_id = cs_domain.id WHERE cs_config_attr_jt.usr_id IS NULL AND cs_config_attr_jt.ug_id IS NULL AND cs_domain.name LIKE ? AND key_id = ?)
fetch_config_attr_exempt_value=SELECT ug_id FROM cs_config_attr_exempt WHERE usr_id = ? AND key_id = ?
fetch_history=SELECT json_data, valid_from FROM cs_history WHERE class_id = ? AND object_id = ? ORDER BY valid_from DESC
fetch_history_limit=SELECT json_data, valid_from FROM cs_history WHERE class_id = ? AND object_id = ? ORDER BY valid_from DESC LIMIT ?
insert_history_entry=INSERT INTO cs_history (class_id, object_id, usr_id, ug_id, valid_from, json_data) VALUES (?, ?, ?, ?, ?, ?)
has_history=SELECT count(class_id) FROM cs_history WHERE class_id = ? AND object_id = ?
table_has_column=SELECT attname FROM pg_attribute WHERE attrelid = (SELECT oid FROM pg_class WHERE relname = ?) AND attname = ?
delete_stringrepcacheentry=delete from cs_stringrepcache where class_id=? and object_id=?
insert_stringrepcacheentry=insert into cs_stringrepcache (class_id,object_id,stringrep) values(?,?,?)
update_stringrepcacheentry=update cs_stringrepcache set stringrep=? where class_id=? and object_id=?
get_all_usergroups=SELECT ug.id AS id, ug.name AS name, ug.descr AS descr, ug.domain AS domain, ug.prio AS prio, d.name AS domain_name FROM cs_ug ug LEFT OUTER JOIN cs_domain d ON ug.domain = d.id ORDER BY ug.name
get_all_classes=SELECT c.id, c.name, descr, class_icon_id, object_icon_id, table_name, primary_key_field, indexed, toStringClass.qualifier AS toStringQualifier, EditorClass.qualifier AS EditorQualifier, RendererClass.qualifier AS RendererQualifier, c.array_link, c.policy, c.attribute_policy FROM cs_class AS c LEFT OUTER JOIN cs_java_class AS toStringClass ON (c.tostring = toStringClass.id) LEFT OUTER JOIN cs_java_class AS EditorClass ON (c.editor = EditorClass.id) LEFT OUTER JOIN cs_java_class AS RendererClass ON (c.renderer = RendererClass.id)
get_all_class_attributes=SELECT * FROM cs_class_attr
get_all_methods=SELECT * FROM cs_method
get_all_images=SELECT * FROM cs_icon
get_all_users=SELECT id, login_name, password, last_pwd_change, administrator FROM cs_usr
get_all_memberships=SELECT login_name, ug.name AS ug, 'LOCAL' AS ugDomain FROM cs_ug_membership AS m, cs_usr AS u, cs_ug AS ug WHERE u.id = m.usr_id AND ug.id = m.ug_id
change_user_password=UPDATE cs_usr SET pw_hash =  md5(salt||?), last_pwd_change = now() WHERE login_name = ? AND md5(salt||?)=pw_hash
get_all_class_permissions=SELECT ug.name AS ug_name, d.name AS domainname, cp.permission, p.key, cp.class_id, cp.ug_id AS ug_id FROM cs_ug_class_perm cp, cs_permission p, cs_ug AS ug, cs_domain AS d WHERE cp.permission = p.id AND cp.ug_id = ug.id AND ug.domain = d.id
get_all_method_permissions=SELECT DISTINCT m.method_id, plugin_id, u.id AS ug_id ,d.name AS ls FROM cs_ug_method_perm AS p, cs_method AS m, cs_ug AS u, cs_domain AS d WHERE m.id = p.method_id AND u.id = p.ug_id AND u.domain = d.id
get_attribute_info=SELECT a.*, ts.qualifier AS toStringString, e.qualifier AS editor_class, s.qualifier AS from_string_class, ce.qualifier AS complexeditorclass FROM cs_attr AS a LEFT OUTER JOIN cs_java_class AS e ON (editor = e.id) LEFT OUTER JOIN cs_java_class AS s ON (from_string = s.id) LEFT OUTER JOIN cs_java_class AS ce ON (complex_editor = ce.id) LEFT OUTER JOIN cs_java_class AS ts ON (a.tostring = ts.id) ORDER BY a.class_id, a.pos
supports_scheduled_server_actions=SELECT 't' FROM information_schema.tables WHERE table_schema = 'public' AND lower(table_name) = 'cs_scheduled_serveractions'