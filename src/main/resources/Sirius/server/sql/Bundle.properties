verify_user_password=SELECT count(*) FROM cs_usr WHERE trim(lower(login_name)) = ? AND trim(lower(password)) = ?
fetch_domain_id_from_domain_string=SELECT id FROM cs_domain WHERE name = ?
fetch_config_attr_key_id=SELECT id FROM cs_config_attr_key WHERE key = ?
fetch_config_attr_user_value=SELECT value FROM cs_config_attr_value WHERE id = (SELECT val_id FROM cs_config_attr_jt LEFT JOIN cs_usr ON cs_config_attr_jt.usr_id = cs_usr.id LEFT JOIN cs_ug ON cs_config_attr_jt.ug_id = cs_ug.id LEFT JOIN cs_domain ON cs_config_attr_jt.dom_id = cs_domain.id WHERE cs_usr.login_name LIKE ? AND cs_ug.name LIKE ? AND cs_domain.name LIKE ? AND key_id = ?)
fetch_config_attr_ug_value=SELECT value FROM cs_config_attr_value WHERE id = (SELECT val_id FROM cs_config_attr_jt LEFT JOIN cs_ug ON cs_config_attr_jt.ug_id = cs_ug.id LEFT JOIN cs_domain ON cs_config_attr_jt.dom_id = cs_domain.id WHERE cs_config_attr_jt.usr_id IS NULL AND cs_ug.name LIKE ? AND cs_domain.name LIKE ? AND key_id = ?)
fetch_config_attr_domain_value=SELECT value FROM cs_config_attr_value WHERE id = (SELECT val_id FROM cs_config_attr_jt LEFT JOIN cs_domain ON cs_config_attr_jt.dom_id = cs_domain.id WHERE cs_config_attr_jt.usr_id IS NULL AND cs_config_attr_jt.ug_id IS NULL AND cs_domain.name LIKE ? AND key_id = ?)
fetch_history=SELECT json_data, valid_from FROM cs_history WHERE class_id = ? AND object_id = ? ORDER BY valid_from DESC
fetch_history_limit=SELECT json_data, valid_from FROM cs_history WHERE class_id = ? AND object_id = ? ORDER BY valid_from DESC LIMIT ?
insert_history_entry=INSERT INTO cs_history (class_id, object_id, usr_id, ug_id, valid_from, json_data) VALUES (?, ?, ?, ?, ?, ?)
has_history=SELECT count(class_id) FROM cs_history WHERE class_id = ? AND object_id = ?
table_has_column=SELECT attname FROM pg_attribute WHERE attrelid = (SELECT oid FROM pg_class WHERE relname = ?) AND attname = ?
delete_stringrepcacheentry=delete from cs_stringrepcache where class_id=? and object_id=?
insert_stringrepcacheentry=insert into cs_stringrepcache (class_id,object_id,stringrep) values(?,?,?)
update_stringrepcacheentry=update cs_stringrepcache set stringrep=? where class_id=? and object_id=?
get_all_usergroups=SELECT ug.id AS id, ug.name AS name, ug.descr AS descr, ug.domain AS domain, d.name AS domain_name FROM cs_ug ug LEFT OUTER JOIN cs_domain d ON ug.domain = d.id ORDER BY ug.name
get_all_classes=select c.id, c.name ,descr,class_icon_id,object_icon_id,table_name,primary_key_field,indexed,toStringClass.qualifier as toStringQualifier,EditorClass.qualifier as EditorQualifier,RendererClass.qualifier as RendererQualifier,c.array_link,c.policy,c.attribute_policy  from cs_class as c  left outer join cs_java_class as toStringClass on (c.tostring =toStringClass.id) left outer join cs_java_class as EditorClass on (c.editor=EditorClass.id) left outer join cs_java_class as RendererClass on (c.renderer=RendererClass.id)
get_all_class_attributes=select * from cs_class_attr
get_all_methods=select * from cs_method
get_all_images=select * from cs_icon
get_all_users=select id,login_name,password,last_pwd_change,administrator from cs_usr
get_all_memberships=select login_name, ug.name as ug , 'LOCAL' as ugDomain  from cs_ug_membership as m,cs_usr as u ,cs_ug as ug  where u.id=m.usr_id and ug.id=m.ug_id
change_user_password=update cs_usr set password = '?', last_pwd_change = 'now' where lower(login_name) = '?' AND lower(password) = '?'
get_all_class_permissions=select ug.name as ug_name, d.name  as domainname,cp.permission , p.key,cp.class_id,cp.ug_id  as ug_id from cs_ug_class_perm cp ,cs_permission p,cs_ug as ug , cs_domain as d where cp.permission=p.id and cp.ug_id = ug.id  and ug.domain=d.id
get_all_method_permissions=select distinct m.method_id, plugin_id, u.id as ug_id , d.name as ls  from cs_ug_method_perm as p,cs_method  as m, cs_ug as u,cs_domain as d  where m.id =p.method_id and u.id=p.ug_id and u.domain=d.id
get_attribute_info=select a.*,ts.qualifier as toStringString,e.qualifier as editor_class,s.qualifier as from_string_class , ce.qualifier as complexeditorclass  from cs_attr as a  left outer join cs_java_class as e on( editor = e.id )  left outer join cs_java_class as s on(from_string = s.id ) left outer join cs_java_class as ce on(complex_editor = ce.id ) left outer join cs_java_class as ts  on(a.tostring = ts.id ) order by a.class_id, a.pos